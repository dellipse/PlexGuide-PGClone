#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Authors:    Admin9705, Deiteq, and many PGBlitz Contributors
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  vars:
    service_vars:
      - { name: crypt.service }
      - { name: pgdrive.service }
      - { name: gdrive.service }
      - { name: gcrypt.service }
      - { name: tdrive.service }
      - { name: tcrypt.service }
      - { name: supertransfer2.service }
      - { name: unionfs.service }
      - { name: pgmove.service }
      - { name: move.service }
      - { name: pgblitz.service }
      - { name: plexdrive.service }
      - { name: st2monitor.service }
      - { name: pgunion.service }

  tasks:
    - name: Stop All Docker Containers
      shell: docker stop $(docker ps -a -q)

    - name: 'Creating Folder - /mnt/{{drive}}'
      file: 'path={{item}} state=absent'
          state: absent 
      with_items:
        - '/mnt/{{drive}}'
    - name: Get existing services
      stat:
        path: '/etc/systemd/system/{{ item.name }}'
      with_items: '{{ service_vars }}'
      register: check_service_name

    - name: Stop services
      systemd: state=stopped name={{ item.item.name }} daemon_reload=yes enabled=no
      with_items: '{{ check_service_name.results }}'
      when: item.stat.exists

    - name: 'Waiting for 5 seconds for services to stop and mounts to unmount cleanly.'
      wait_for: timeout=5

    - name: Remove services
      file:
        path: '/etc/systemd/system/{{ item.item.name }}'
        state: absent
      with_items: '{{ check_service_name.results }}'
      when: item.stat.exists

    - name: Register hdpath
      shell: 'cat /var/plexguide/server.hd.path'
      register: hdpath
      
    - name: Create Basic Directories
      file: 'path={{item}} state=absent mode=0775 owner=1000 group=1000 recurse=true'
      with_items:
        - '/var/plexguide/logs'
        - '/var/plexguide/logs/drive'
        - '/var/plexguide/logs/emergency'
        - '/var/plexguide/logs/uploader'
        - '/opt/plexguide/roles/log'
      ignore_errors: yes

    - name: Stop All Docker Containers
      shell: docker start $(docker ps -a -q)

